// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231126080247_FistMigrationCreateModel")]
    partial class FistMigrationCreateModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.DatabaseC.ChannelList", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelId"));

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChannelId");

                    b.ToTable("ChannelList");
                });

            modelBuilder.Entity("Domain.DatabaseC.GatewayInfo", b =>
                {
                    b.Property<int>("StanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StanId"));

                    b.Property<DateTime>("ServerReqDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("AccountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActualAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<int>("ChannelListChannelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChannelReqDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FinAppResCode")
                        .HasColumnType("int");

                    b.Property<string>("GatewayId")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorKYC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InquiryMode")
                        .HasColumnType("int");

                    b.Property<int?>("InquiryType")
                        .HasColumnType("int");

                    b.Property<string>("LoginID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartialAmountFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PayMode")
                        .HasColumnType("int");

                    b.Property<int?>("PayType")
                        .HasColumnType("int");

                    b.Property<string>("PaymentContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterMSISDN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SpResDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SysChannelReqDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SysChannelResDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SysSpReqDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SysSpResDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrxRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StanId", "ServerReqDate");

                    b.HasIndex("ChannelListChannelId");

                    b.ToTable("GatewayInfo", t =>
                        {
                            t.HasTrigger("Trigger_MessageInfos_Insert");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Domain.DatabaseC.RoutingServerList", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RID"));

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RID");

                    b.ToTable("RoutingServerList");
                });

            modelBuilder.Entity("Domain.DatabaseC.Stan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CounterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CounterValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("stan", t =>
                        {
                            t.HasTrigger("Trigger_Stan_update");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Domain.DatabaseC.GatewayInfo", b =>
                {
                    b.HasOne("Domain.DatabaseC.ChannelList", "ChannelList")
                        .WithMany()
                        .HasForeignKey("ChannelListChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelList");
                });
#pragma warning restore 612, 618
        }
    }
}
